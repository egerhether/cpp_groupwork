Fix a problem in the strings class

1. Why are there two "at" functions declared?

One of them deals with constant and one non-constant strings separately,
through const overloading.

ie. string const myString = stringsObject.at() will call the const version
of at() and vice versa.

As the non-constant version returns a non-const reference, it allows for 
modifications of the string at the requested index.

2. Which one is used in the abovementioned main function? 

The non-const one as we are using the return value as an r-value. No const
keyword is specified.

3. Provide example showing a situation where the other at member is used. 

    Strings obj;
    obj.add("string");
    const string myStr = obj.at(0);

DEFECT: the defect in the provided code is that the defined class strings 
doesn't have a destructor while it reserves memory, meaning that it has a data 
leak whenever a Strings obj is created as its data is never deleted.
