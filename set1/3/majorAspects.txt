1. The 'main' function:

The type of 'main' function in C++ is 'int' while it is 'void' in C, it cannot
be overloaded in C++ and one does not need an explicit return statement at the 
end. Furthermore C is more liberal in its approach to the main function and
any combination of arguments is allowed while in C++ it has to be 
"int main (int argc, char *argv[])".

2. Standard template library

C++ has a standard template library offering a collection of common data
structures and algorithms, whereas C does not have such standardised library.

3. Exceptions

C++ has a more involved exception handling (with usage of keywords such as
"try", "catch" or "throw") allowing for different ways to manage errors. In C 
on the other hand, a programmer must use error codes or check them manually.

4. Type of programming language

C++ is an object-oriented programming language, which C is not. Thus in C++ 
we work with classes and objects allowing for organization of code into 
manageable units.

5. Default arguments

C++ allows for definition of default arguments within function definitions,
then the compiler substitutes the lack of argument in said function if no 
argument is provided when running it by the default. 

6. Overloading functions

In C++ it is allowed to define functions under the same name which do not 
perform the same action, but they have to have different parameters and/or
conts attribute. This is however possible only if the functions don't 
differ in the return type as their only difference. This is because then 
the functions would be indistiguishable to the compiler causing an error. 
C does not allow for overloading.
